#!/usr/bin/python
import sys
import os

sys.path.append("../")
import MalwareSampleReport


####################################
# This script takes the cuckoo path, 
# and also a range of numbers and 
# produces buckets categorization
# for those reports 
####################################

#Make buckets. map category to number of reports.

reports_folder = sys.argv[1] + "/malwareOutput/"
report_name = sys.argv[2]

num_buckets = 4

buckets=[ [-9999,1], [1,2], [2,5], [5,9999] ]

#Bucket zero means no report/ no score available
summary = dict( {0:0, 1:0, 2:0, 3:0, 4:0 } )

no_reports_files = []

def get_bucket(score):
	for i in range(0,num_buckets):
		if score >= buckets[i][0] and score < buckets[i][1]:
			return i+1

def process_file(f):
	try:
		report = MalwareSampleReport.MalwareSampleReport(f)
		score = report.get_score()
		bucket_number = get_bucket(score)
		summary[bucket_number] = summary[bucket_number] + 1
	except (KeyError, ValueError, IOError) as e:
		print str(e)
		summary[0] = summary[0] + 1
		no_reports_files.append(f)

def dump_buckets():
	print "Buckets: [" + str(summary[1]) + "," + str(summary[2]) + "," + str(summary[3]) + "," + str(summary[4]) + "]"
	print "No report / No score: " + str(summary[0])
	print "No reports for the following samples:"
	for f in no_reports_files:
		print "\t" + f


counter = 0
malware_folders = [d for d in os.listdir(reports_folder) if os.path.isdir(os.path.join(reports_folder, d))]

size = len(malware_folders)
	
for malware in malware_folders:
	if counter % 10 == 0:
		print "Finished: " + str(counter) + " out of: " + str(size)
	if counter % 100 ==0:
		dump_buckets()
	
	#stripped_line = line.replace('\n', '').replace('\r', '')
	path_string = os.path.join(reports_folder, malware) + "/" + report_name
        #print "Processing file: " + path_string
	process_file(path_string)
	counter = counter +1

print "Final Buckets:"
dump_buckets()
	
