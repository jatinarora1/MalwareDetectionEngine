#!/usr/bin/python

import os
import platform
import sys
from datetime import datetime as dt

#Returns the timestamp in seconds since epoch
def get_modified_timestamp(path_to_file):
	stat = os.stat(path_to_file)
	return stat.st_mtime


num_samples = None
try:
	num_samples = int(sys.argv[2])
except:
	pass

min_timestamp = float("inf")
min_file = ""
max_timestamp = float("-inf")
max_file = ""
min_latency = float("inf")
max_latency = float("-inf")

log_file_prefix = "/dvasion/"
log_file_suffix = "-report.log"

def convert_timestamp(tstamp):
	return dt.fromtimestamp(tstamp)

def update_min_max(new_val, f):
	global min_timestamp
	global max_timestamp
	global min_file
	global max_file
	if new_val < min_timestamp:
		min_timestamp = new_val
		min_file = f

	if new_val > max_timestamp:
		max_timestamp = new_val
		max_file = f


def dump_info():
	print "File with minimum time stamp: " + min_file + ". Last modified: " + str(convert_timestamp(min_timestamp))
	print "File with maximum time stamp: " + max_file + ". Last modified: " + str(convert_timestamp(max_timestamp))
	print "Number of seconds: " + str(max_timestamp - min_timestamp)
	print "Number of hours: " + str( (max_timestamp - min_timestamp) / (60*60) )
	if num_samples:
		print "Bandwidth: " + str( (24*60*60) * num_samples / (max_timestamp - min_timestamp)) + " samples / day"

def main():
	folder = sys.argv[1]
	for root, subFolders, files in os.walk(folder):
		for f in files:
			pth = os.path.join(root, f)
			#print pth
			tstamp = get_modified_timestamp(pth)
			update_min_max(tstamp,pth)

	dump_info()
	
	


if __name__ == "__main__":
	main()



