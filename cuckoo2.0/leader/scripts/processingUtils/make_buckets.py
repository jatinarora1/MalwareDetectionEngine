#!/usr/bin/python
import sys

sys.path.append("../")
import MalwareSampleReport


####################################
# This script takes the cuckoo path, 
# and also a range of numbers and 
# produces buckets categorization
# for those reports 
####################################

#Make buckets. map category to number of reports.

cuckoo_path = sys.argv[1]
start = int(sys.argv[2])
end = int(sys.argv[3])

num_buckets = 4

buckets=[ [-9999999,1], [1,2], [2,5], [5,9999999] ]

#Bucket zero means no report/ no score available
summary = dict( {0:0, 1:0, 2:0, 3:0, 4:0 } )


def make_path(task_num):
	return cuckoo_path + "/storage/analyses/" + str(task_num) + "/reports/report.json"

def get_bucket(score):
	for i in range(0,num_buckets):
		if score >= buckets[i][0] and score < buckets[i][1]:
			return i+1

def process_file(f):
	try:
		report = MalwareSampleReport.MalwareSampleReport(f)
		score = report.get_score()
		bucket_number = get_bucket(score)
		summary[bucket_number] = summary[bucket_number] + 1
	except (KeyError, ValueError, IOError) as e:
		summary[0] = summary[0] + 1

def dump_buckets():
	print "Buckets: [" + str(summary[1]) + "," + str(summary[2]) + "," + str(summary[3]) + "," + str(summary[4]) + "]"
	print "No report / No score: " + str(summary[0])


#with open(files) as f:
        #contents = f.readlines()
	#size = len(contents)
size = end - start + 1
counter = 0
	
for task_id in range(start,end):
	if counter % 10 == 0:
		print "Finished: " + str(counter) + " out of: " + str(size)
	if counter % 100 ==0:
		dump_buckets()
	
	#stripped_line = line.replace('\n', '').replace('\r', '')
	path = make_path(task_id)
        process_file(path)	
	counter = counter +1

print "Final Buckets:"
dump_buckets()
	
