#!/usr/bin/env python
import json
import argparse
import os
import sys

# Imports are relative. Make sure that this file is in ./leader/scripts, or modify this line to make
# imports relative to the cuckoo root directory
sys.path.append(os.path.join(os.path.abspath(os.path.dirname(__file__)), "../../"))

from modules.reporting import reporthtml
from lib.cuckoo.common.config import Config
from lib.cuckoo.common.exceptions import CuckooReportError

def html_report(filename,report_path):
	if not (os.path.isfile(filename)):
		print "File %s does not exist" % filename
		sys.exit()

	# Make the directory if it doesn't exist
	if not os.path.exists(report_path):
		os.makedirs(report_path)

	# Because htmlreport just takes a "results" dict and converts it to an html, and
	# the json report is just this "results" dict dumped to a json file, simply load this json
	# file as a dict and give it to the reporthtml module

	try:
		with open(filename) as report_file:
			results_dict = json.load(report_file)
	except Exception as e:
		print "Failure loading json file. Exception: %s" % e
		sys.exit()

	# Create an HTML reporter object 
	html_reporter = reporthtml.ReportHTML()

	# Set the output path. Note that html reporter will add a "reports" directory 
	# to this directory if it does not already have one (so a report set to be 
	# placed in ./ can be actually be found in ./reports/report.html)
	html_reporter.set_path(report_path)

	# Set the configuration for html reporter
	html_reporter.cfg = Config(cfg=html_reporter.conf_path)

	# Run the processing routines	
	try:
		html_reporter.run(results_dict)
	except CuckooReportError as e:
		print e

if __name__ == "__main__":
	p = argparse.ArgumentParser()
	p.add_argument("-f", "--file", type=str, help="The file or files that you would like to convert", default=None,required=True)
	p.add_argument("-o", "--output_path",type=str, help="The output directory (the filename will always be report.html)", default="./")
	args = p.parse_args()

	filename = args.file
	report_path = args.output_path
	
	html_report(filename,report_path)
