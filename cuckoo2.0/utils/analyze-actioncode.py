#!/usr/bin/env python


import os
import sys
import glob
import re
import binascii



if_stmts = []

####### 

def fxxx(x):
	return {
	
		'18' : '15',  ## ifge ---> iflt
		'17' : '16',  ## ifgt ---> ifle
		'13' : '14',  ## ifeq ---> ifne 
		'16' : '17',  ## ifle ---> ifgt
		'15' : '18',  ## iflt ---> ifge
		'0f' : '0c',  ## ifnge ---> ifnlt
		'0e' : '0d',  ## ifngt ---> ifnle
		'0d' : '0e',  ## ifnle ---> ifngt
		'0c' : '0f',  ## ifnlt ---> ifnge
		'14' : '13',  ## ifne ---> ifeq
		'19' : '1a',  ## ifstricteq ---> ifstrictne
		'1a' : '19',  ## ifstrictne ---> ifstricteq
		'11' : '12',  ## iftrue ---> iffalse
		'12' : '11',  ## iffalse ---> iftrue

	}.get(x,9)




#Counting the "string" occurrence in a file
def count_string_occurrence(file_name, inStmt, count):
	f = open(file_name)
	contents = f.read()
	f.close()
	contents_hex = binascii.hexlify(contents)
	orig_hex = ''
	replace_hex = 'FF'
	for hex_digits in inStmt:
		orig_hex+=str(hex_digits)
		if replace_hex is 'FF':
			tmp = fxxx(hex_digits)
			replace_hex = tmp
		else:
			replace_hex += str(hex_digits)

	num_occur = contents_hex.count(orig_hex)

	print "Number of '" , orig_hex, num_occur, replace_hex
	
	if num_occur is 1:
		#print 'We will rewrite this' 
		contents_hex.replace(orig_hex, replace_hex)
		binary_string = binascii.unhexlify(contents_hex)
		f1 = open('/home/aparna/new_files/'+file_name+'_'+str(count), 'w')
		f1.write(binary_string)
		f1.close()
		return 1

	return 0


def getWords(text):
    return re.compile('\w+').findall(text)


def process_if_stmt(if_stmt):
	words = getWords(if_stmt)
	if_stmts.append(words)


def process_pcode(file_name):
	print "Pcode file: ", file_name
	if_names = ['ifge','ifgt','ifeq','ifle','iflt','ifnge','ifngt','ifnle','ifnlt','ifne','ifstricteq','ifstrictne','iffalse','iftrue']
	last_line = ""
	with open(file_name) as f:
		for line in f:
			if any(x in line for x in if_names):
				#print last_line, line
				process_if_stmt(last_line)
			last_line = line; 
        

def get_files(my_dir):
	for root, dirs, files in os.walk(my_dir):
		for file in files:
			if file.endswith(".pcode"):
				f_name = os.path.join(root, file)
				#print(f_name)
				process_pcode(f_name)
	

##### The main function 

num_args = len(sys.argv)

if num_args != 2:
	print "Usage: python ./analyze-actioncode.py <name-of-flash-file>"
	quit()

##### Run the ffdec command #####

print "Arguments: ",  sys.argv[0], sys.argv[1]


file_name = sys.argv[1]

####### Check the file type. If it is compressed, then decompress it ##### 
file_cmd = 'file ' + file_name

file_type_ans = os.popen(file_cmd).read()

print file_type_ans


if 'compressed' in file_type_ans:
	print 'The file is compressed'
	ffdec_decompress_cmd = 'ffdec -decompress ' + file_name + ' ' + file_name + 'new'
	os.popen(ffdec_decompress_cmd)
	file_name += 'new'


ffdec_cmd = 'ffdec -format script:pcodehex -export script "/home/aparna/Downloads/testing/' +file_name +'" ' + file_name 

print ffdec_cmd

os.popen(ffdec_cmd)

####### This does all the core processing for files within the scripts folder ##### 
get_files('/home/aparna/Downloads/testing/' + file_name + '/scripts/')

num_count = 0

### This gets the if stmts #### 
for ifSt in if_stmts:
	if num_count < 100:
		ret = count_string_occurrence(file_name, ifSt, num_count)
		num_count = num_count + ret
	else:
		break

print 'Done with: ' , file_name



























