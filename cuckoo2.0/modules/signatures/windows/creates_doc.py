# Copyright (C) 2010-2015 Cuckoo Foundation.
# This file is part of Cuckoo Sandbox - http://www.cuckoosandbox.org
# See the file 'docs/LICENSE' for copying permission.

from lib.cuckoo.common.abstracts import Signature

class CreatesDocument(Signature):
    name = "creates_doc"
    description = "Creates (office) documents on the filesystem"
    severity = 2
    categories = ["generic"]
    authors = ["Cuckoo Technologies"]
    minimum = "2.0"
    office_pkgs = ["ppt","doc","xls","eml"]
    pattern = ".*\\.(doc|docm|dotm|docx|ppt|pptm|pptx|potm|ppam|ppsm|xls|xlsm|xlsx|pdf)$"

    def on_complete(self):
        target_name = None

	if any(e in self.get_results("info",{})["package"] for e in office_pkgs):
        	self.is_office = True

        if self.is_office and "file" in self.get_results("target",{}):
            target_name = self.get_results("target",{})["file"]["name"]


        if self.is_office:
                raise Exception

        for filepath in self.check_file(pattern=self.pattern, actions=["file_written"], regex=True, all=True):
            if self.is_office and target_name and not filepath.endswith("\\"):
                fname = filepath.split("\\")[-1][2:].replace("(", "_").replace(")", "_")
                if fname == target_name or fname in target_name:
                    continue


            self.mark_ioc("file", filepath)

        return self.has_marks()
