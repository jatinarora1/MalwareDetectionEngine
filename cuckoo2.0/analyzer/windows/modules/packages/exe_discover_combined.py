# Copyright (C) 2010-2013 Claudio Guarnieri.
# Copyright (C) 2014-2015 Cuckoo Foundation.
# This file is part of Cuckoo Sandbox - http://www.cuckoosandbox.org
# See the file 'docs/LICENSE' for copying permission.

import os
import shlex
import logging
import subprocess
import tempfile
import time

from lib.core.config import Config
from lib.common.abstracts import Package
from lib.api.process import Process

pid_file = "C:\\Dlls\\pid.txt"

pid_out_file = "C:\\Dlls\\pid_out.txt"

log = logging.getLogger(__name__)

class Exe(Package):
    """EXE analysis package."""

    def start(self, path):
        
	args = self.options.get("arguments", "")

        cfg = Config("analysis.conf")
	name, ext = os.path.splitext(path)
        if not ext:
            new_path = name + ".exe"
            os.rename(path, new_path)
            path = new_path

        
        #Make a copy of the sample in case it deletes itself
	copiedPath = path + ".copy.exe"
	copyCmd = "copy " + path + " " + path + ".copy.exe"
	os.system(copyCmd)	

	# Get the arguments
        #path_vm = self.options.get("path_vm", "")


	dumpBinCmd = "C:\\Dlls\\dumpbin.exe /dependents " + path + " > C:\\Dlls\\LWR_outDumpBin.txt"
        log.warning(dumpBinCmd)
        subprocess.Popen(dumpBinCmd,shell=True)

	corFlagsCmd = "C:\\Dlls\\CorFlags.exe " + path + " /32BITREQ+"
	log.warning(corFlagsCmd)
	os.system(corFlagsCmd)
	#ngenCmd = "C:\\Dlls\\ngen.exe install " + path + " > C:\\Dlls\\out-ngen.txt"

	ngenCmd = "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\ngen.exe install " + path + " > C:\\Dlls\\out-ngen.txt"
	log.warning(ngenCmd)
	os.system(ngenCmd)
        #subprocess.Popen(ngenCmd,shell=True)
	time.sleep(3)

        dv_args1 = ["-c", "C:\\Dlls\\dvasion_vm.dll"]
        
        dv_args1.append("--")
        dv_args1.append(copiedPath)
        dv_args1.append((args))        
       
 
	self.options["free"] =  False
        self.options["inject"] =  True

	pid_orig_run = self.start_orig_cuckoo(path)

	time.sleep(3)

	self.options["free"] =  True
        self.options["inject"] =  False

	#Injection starts here
        other_pid = self.execute(path="C:\\Dlls\\discover\\bin32\\drrun.exe", args=dv_args1)


	return other_pid

    def start_orig_cuckoo(self, path):
        args = self.options.get("arguments", "")
	
        name, ext = os.path.splitext(path)
        if not ext:
            new_path = name + ".exe"
            os.rename(path, new_path)
            path = new_path

        return self.execute(path, args=shlex.split(args))                        
	
