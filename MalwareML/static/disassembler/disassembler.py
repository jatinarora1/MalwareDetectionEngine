from pybfd import bfd as pbfd
from pybfd.opcodes import Opcodes
import sys



def main(filename):
    # def __call__(self, parser, namespace, values, option_string=None):
        # Initialize BFD instance and proceed to display the requested
        # information.
    bfd = pbfd.Bfd(filename)

    print "\n%s:     file format %s\n" % \
        (bfd.filename, bfd.architecture)

    opcodes = Opcodes(bfd)

    for section_name in bfd.sections:

        section = bfd.sections[section_name]

        dict = {}

        #
        # Obtain the section content and request its disassembly.
        #
        print "\nDisassembly of section %s\n" % section.name

        dict[section.name] = {}

        for vma, size, disasm in opcodes.disassemble(section.content, section.vma):

            instr = disasm.split(" ")[0]

            if (instr not in dict[section.name].keys()):
                dict[section.name][instr] = 1
            else:
                dict[section.name][instr] += 1

        print(dict)


if __name__ == "__main__":
    if len(sys.argv) > 1:
        main(sys.argv[1])
    else:
        print("The command requires a filename, e.g.: 'python objdump.py /home/patrick/samples/6'")
